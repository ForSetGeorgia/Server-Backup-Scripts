# Any value other than production will run the full script but will not save to Amazon S3
# only production will save to Amazon
ENVIRONMENT=development

# email notification settings
EMAIL_SMTP_DOMAIN='smtp.google.com'
EMAIL_SMTP_PORT='587'

# where to send email notifications
# - these fields must be filled out even for development environment
#   so that the email to mailcatcher can be sent
#   - the emails and passwords do not have to be real
FEEDBACK_FROM_EMAIL=
FEEDBACK_FROM_EMAIL_PASSWORD=
FEEDBACK_TO_EMAIL=

# if this script is on a server, setting this to true will
# - make sure the report email is sent (even if not in production environemtn)
# - use the deployed rails app folder structure when looking for system folder
IS_SERVER=false
 # this is used in log and compressed file names along with date and server name
BACKUP_TYPE=daily
 # this is used in log and compressed file names along with date and type (i.e., alpha)
SERVER_NAME=alpha
# prefix name of bucket that will be in format: prefix-server_name (jsgeorgia-alpha)
S3_BUCKET_PREFIX=jsgeorgia
# the buck name is is the prefix-server but in older servers it was prefix_server.
# if this is a new server, use '-', if this is an old server check on amazon s3 but it is probably _
S3_BUCKET_SEPARATOR='-'
# in order to run on server as root with rake task, we must provide the full path to the s3cmd
S3CMD_PATH='/usr/local/bin/s3cmd'
# path to the root folder of this script (i.e., /root/scripts/server_backup)
ROOT_DIR='/root/scripts/server_backup'
# tmp folder to use when dumping databases and compressing files
TMP_DIR='/root/scripts/server_backup/tmp'
# where to save the log files
LOG_DIR='/root/scripts/server_backup/log'
# indicate if mysql databases should be backed-up
# - the user and password are only needed when backup is needed
HAS_MYSQL=true
MYSQL_USER=
MYSQL_PASSWORD=
# indicate if mongo databases should be backed-up
HAS_MONGO=false
# indicate if postgres databases should be backed-up
HAS_POSTGRES=false
POSTGRES_USER=
POSTGRES_PASSWORD=
# indciate that rails apps exist
# - this will then look for their system folder and back it up
HAS_RAILS=true
# indciate that rails apps to ignore
# - some rails apps have a system folder of content that is not needed to be backed up
# - create a comma-separated list of the application folder names that you do not want backed up
# - example: 'Election-Map, Mashasadame, Story-Builder'
RAILS_APPS_TO_IGNORE=""
# indicate that web files in /var/www need to be backed up
HAS_VAR_WWW=false
# indicate that web files in /usr/share/nginx/html need to be backed up
HAS_NGINX_HTML=false
# list of other directories that need to be backed up
# - make it a string of comma separated paths: "/home/user, /drupal/path/sites/default, ..."
# - NOTE: /etc is automatically backed up
SPECIFIC_DIRECTORES=""
# indciate what time script should be run
# - format is '2:00 am'
# - NOTE: keep in mind time difference if servers are in another country
BACKUP_SERVER_TIME='3:00 am'
